"use strict";function _typeof(e){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}var btns=document.querySelectorAll(".btn"),display=document.querySelector(".display"),currentInputArray=[],result=null,operator=null,secondNumber=null,firstNumber=0,calculate=function(e){"AC"===e.value?resetCalculator():"CE"===e.value?handleCE():"="===e.value?setEqual():(e.classList.contains("btn-number")?handleNumber:handleOperator)(e)},resetCalculator=function(){currentInputArray=[],operator=result=secondNumber=firstNumber=null,display.textContent="."},handleCE=function(){currentInputArray.pop();var e=currentInputArray.join("");operator||result?(secondNumber=parseFloat(e),isNaN(secondNumber)&&(secondNumber=0),console.log("".concat(secondNumber," second number after CE")),display.textContent=secondNumber):(firstNumber=parseFloat(e),isNaN(firstNumber)&&(firstNumber=0),console.log("".concat(firstNumber," first number after CE")),display.textContent=firstNumber)},handleNumber=function(e){var r,e="object"===_typeof(e)?e.value:e;console.log(e),operator||result?(currentInputArray.push(e),r=currentInputArray.join(""),secondNumber=parseFloat(r),display.textContent=secondNumber,console.log("".concat(secondNumber," second number"))):(currentInputArray.push(e),r=currentInputArray.join(""),firstNumber=parseFloat(r),display.textContent=firstNumber,console.log("".concat(firstNumber," first number")))},handleOperator=function(e){e="object"===_typeof(e)?e.value:e;if(operator)return secondNumber?(setEqual(),operator=e,void console.log("".concat(operator," operator existed"))):void 0;display.textContent=e,operator=e,currentInputArray=[],console.log("".concat(operator," operator"))},setEqual=function(){if(null!==firstNumber&&null!==secondNumber){switch(console.log(firstNumber),console.log(secondNumber),operator){case"+":result=firstNumber+secondNumber;break;case"-":result=firstNumber-secondNumber;break;case"*":result=firstNumber*secondNumber;break;case"/":if(0===secondNumber)return currentInputArray=[],operator=result=secondNumber=firstNumber=null,display.textContent="DIVIDED BY 0";result=firstNumber/secondNumber}result=parseFloat(result.toFixed(10)),firstNumber=result,operator=secondNumber=null,currentInputArray=[],display.textContent=result,console.log("".concat(result," result number"))}};btns.forEach(function(e){e.addEventListener("click",function(){return calculate(e)})}),window.addEventListener("keyup",function(e){e=e.key;"0123456789.".includes(e)?handleNumber(e):"*/+-".includes(e)?handleOperator(e):"="===e||"Enter"===e?setEqual():"Escape"===e?resetCalculator():"Backspace"===e&&handleCE()});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
